//***************************************************************************
// Copyright (c) 2021 for information on the respective copyright owner
// see the NOTICE file and/or the repository https://github.com/boschglobal/automotive-bus-schema
//
// SPDX-License-Identifier: Apache-2.0
//***************************************************************************
//
// IDL for Automotive Bus - Register Interface - Ethernet
//
// MIME type : application/x-automotive-bus; interface=register; type=Ethernet;
// Flatbuffers file identifier : RIEN


namespace AutomotiveBus.RegisterInterface.Ethernet;


// Ethernet Bus Model
// ====================

enum BusSync:byte { NoSync = 0, Sync = 1}

table EthernetStatus {
    sync:BusSync;
}

// Holds data from clock system call. Used for timestamps and simulation time.
struct TimeSpec {
    sec:long;
    nsec:long;
}

// Direction (of an Ethernet Buffer), None is disabled.
enum BufferDirection:byte { None = 0, Tx = 1, Rx = 2 }

// Status of an Ethernet Buffer.
enum BufferStatus:byte { None = 0, TxDone = 1, RxDone = 2, TxError = 11, RxError = 12 }

// Ethernet Frame
table EthernetFrame {
    dest_mac:[ubyte];           // Destination MAC address, 6 bytes
    src_mac:[ubyte];            // Source MAC address, 6 bytes
    vlan_tag:[ubyte];           // VLAN tag, 4 bytes
    type:[ubyte];               // Type, 2 bytes
    data:[ubyte];               // Payload, 42 - 1497 bytes
    length:ushort;              // Length of data payload.
}

// Ethernet Buffer
table EthernetBuffer {
    index:ubyte;
    direction:BufferDirection = None;
    status:BufferStatus = None;

    // Frame
    frame:EthernetFrame;                // Ethernet Frame.

    // Simulation Environment - The following values are injected/modified by
    //  the simulation environment and for FMU's are information only.
    timestamp:TimeSpec (required);          // Time since Linux epoch, in uSec.
    simulation_time:TimeSpec (required);    // Simulation time, in uSec.
}


// Ethernet Register File
// ======================

table RegisterFile {
    status:EthernetStatus;       // L1/2 Bus Status.
    buffer:[EthernetBuffer];     // Buffers for Ethernet Messages.
}


root_type RegisterFile;
file_identifier "RIEN";
file_extension "ethernet";
